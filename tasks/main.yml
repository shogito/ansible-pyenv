- include: prereq-RedHat.yml
  when: ansible_os_family == 'RedHat'
  tags:
      - pyenv
      - redhat

- include: prereq-Debian.yml
  when: ansible_os_family == 'Debian'
  tags:
      - pyenv
      - debian

- name: clone pyenv
  git: repo=git://github.com/yyuu/pyenv.git dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/.pyenv accept_hostkey=yes depth=1
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  tags:
      - pyenv

- name: create environ dir
  file: path={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/profile.d state=directory mode=0755
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  tags:
      - pyenv

- name: add environ script
  copy: src=../files/pyenv.sh dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/profile.d/ mode=0644
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  tags:
      - pyenv

- name: check bash
  shell: "[ -x $(which bash) ] && echo 'Found' || echo ''"
  register: executable_bash
  changed_when: false 
  tags:
      - pyenv

- name: add bash environ
  include: bash-env.yml
  when: executable_bash.stdout
  tags:
      - pyenv

- name: check zsh
  shell: "[ -x $(which zsh) ] && echo 'Found' || echo ''"
  register: executable_zsh
  changed_when: false 
  tags:
      - pyenv

- name: add zsh environ
  include: zsh-env.yml
  when: executable_zsh.stdout
  tags:
      - pyenv

- stat: path={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/.pyenv/versions/{{ ANSIBLE_PYENV_PYTHON_VERSION }}
  register: pyenv_version_dir

- name: python install
  shell: "echo y | '{{ ANSIBLE_PYENV_PYENV_USER_HOME }}'/.pyenv/bin/pyenv install {{ ANSIBLE_PYENV_PYTHON_VERSION }}"
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  when: pyenv_version_dir.stat.exists == False
  changed_when: false 
  tags:
      - pyenv
      - python install
  
- name: python global 
  shell: "'{{ ANSIBLE_PYENV_PYENV_USER_HOME }}'/.pyenv/bin/pyenv global {{ ANSIBLE_PYENV_PYTHON_VERSION }}"
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  changed_when: false 
  tags:
      - pyenv
      - python global

- name: clone pyenv-virtualenv
  git: repo=git://github.com/yyuu/pyenv-virtualenv.git dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/.pyenv/plugins/pyenv-virtualenv accept_hostkey=yes depth=1
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"

- name: python version check
  shell: "su - root -c 'python -V'" 
  changed_when: false
  tags:
      - pyenv
      - python check 
